worker_processes 4;

events { worker_connections 1024; }

http {

	upstream node-app {	
	    least_conn;
	    server docker-nginx-nodejs-redis-node.js-1:8081  max_fails=3 fail_timeout=30s;
	    server docker-nginx-nodejs-redis-node.js-2:8081  max_fails=3 fail_timeout=30s;
	    server docker-nginx-nodejs-redis-node.js-3:8081  max_fails=3 fail_timeout=30s;
	}
	 
	server {
	      listen 80;
	 
	      location / {
	        proxy_pass http://node-app;
	        proxy_http_version 1.1;
	        proxy_set_header Upgrade $http_upgrade;
	        proxy_set_header Connection 'upgrade';
	        proxy_set_header Host $host;
	        proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 86400s;   # keep inactive web socket connections open for 1 day
            proxy_send_timeout 86400s;
	      }
	}
}
